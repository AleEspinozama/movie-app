{"version":3,"sources":["action-types/index.js","actions/index.js","components/Favorites/Favorites.js","components/Buscador/Buscador.js","components/NavBar/NavBar.js","components/Movie/Movie.js","App.js","serviceWorker.js","reducers/index.js","store/index.js","index.js"],"names":["ADD_MOVIE_FAVORITE","GET_MOVIES","GET_MOVIE_DETAIL","REMOVE_MOVIE_FAVORITE","CLEAR_MOVIE_DETAIL","getMovieDetail","idmovie","dispatch","fetch","then","response","json","type","payload","removeMovieFavorite","ConnectedList","console","log","this","props","movies","className","map","movie","to","id","src","poster","alt","title","onClick","Component","connect","state","moviesFavourites","Buscador","event","setState","target","value","preventDefault","getMovies","onSubmit","e","handleSubmit","htmlFor","autoComplete","onChange","handleChange","imdbID","Poster","Title","addMovieFavorite","xmlns","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","moviesLoaded","titulo","process","NavBar","exact","Movie","clearMovieDetail","movieId","match","params","movieDetail","Plot","Director","Writer","Actors","Year","Language","Genre","BoxOffice","Awards","Released","Runtime","imdbRating","React","App","Fragment","path","component","Favorites","Boolean","window","location","hostname","initialState","vacio","rootReducer","action","concat","Search","filter","m","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","args","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a94cbe8d.chunk.js","sourcesContent":["export const ADD_MOVIE_FAVORITE= \"ADD_MOVIE_FAVORITE\";\r\nexport const GET_MOVIES= \"GET_MOVIES\";\r\nexport const GET_MOVIE_DETAIL= \"GET_MOVIE_DETAIL\";\r\nexport const REMOVE_MOVIE_FAVORITE= \"REMOVE_MOVIE_FAVORITE\";\r\nexport const CLEAR_MOVIE_DETAIL= \"CLEAR_MOVIE_DETAIL\";","import {ADD_MOVIE_FAVORITE, GET_MOVIES, GET_MOVIE_DETAIL, REMOVE_MOVIE_FAVORITE, CLEAR_MOVIE_DETAIL} from \"../action-types\"\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n\r\nexport function addMovieFavorite(payload) {\r\n    return { \r\n        type: ADD_MOVIE_FAVORITE, \r\n        payload \r\n    };\r\n}\r\n  \r\nexport function getMovies(titulo) {\r\n    return function(dispatch) { //regresa una acciÃ³n dispatch\r\n    return fetch(`https://www.omdbapi.com/?apikey=${apiKey}&s=${titulo}`)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n          dispatch({ type: GET_MOVIES, payload: json });\r\n        }); \r\n    }; \r\n}\r\n\r\nexport function getMovieDetail (idmovie) {\r\n    return function(dispatch) {\r\n        return fetch(\"http://www.omdbapi.com/?apikey=7a03be8d&i=\" + idmovie + \"&plot=full\")\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            dispatch({ type: GET_MOVIE_DETAIL, payload: json });\r\n          });\r\n      };\r\n}\r\n\r\nexport function clearMovieDetail(){\r\n  return {\r\n      type: CLEAR_MOVIE_DETAIL\r\n  }\r\n}\r\n\r\nexport function removeMovieFavorite (payload) {\r\n    return {\r\n        type: REMOVE_MOVIE_FAVORITE,\r\n        payload\r\n    }\r\n\r\n}\r\n\r\n  ","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { getMovieDetail, removeMovieFavorite } from \"../../actions\";\r\nimport './Favorites.css';\r\n\r\nexport class ConnectedList extends Component {\r\n \r\n\r\n  render() {\r\n    console.log(this.props.movies);\r\n    return (\r\n      <div className=\"favslist\">\r\n          <h2>Favorites</h2>\r\n          <div className=\"lista\">\r\n              {this.props.movies.map(movie=> \r\n                <div key={movie.id}>\r\n                  <Link to={`/movie/${movie.id}`}  >\r\n                    <img src={movie.poster} alt={movie.title}></img>\r\n                  </Link>\r\n                  <div className=\"det\">\r\n                  <h3>{movie.title}</h3>\r\n                  <button onClick={() => this.props.removeMovieFavorite({id: movie.id})}>X</button>\r\n                  </div>\r\n              </div>\r\n                )\r\n              }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    movies: state.moviesFavourites\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getMovieDetail: id => dispatch(getMovieDetail(id)),\r\n    removeMovieFavorite: id => dispatch(removeMovieFavorite(id))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ConnectedList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { getMovieDetail, getMovies, removeMovieFavorite, addMovieFavorite } from \"../../actions\";\r\nimport './Buscador.css';\r\n\r\n\r\n\r\nexport class Buscador extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\"\r\n    };\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ title: event.target.value });\r\n\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.getMovies(this.state.title)\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const { title } = this.state;\r\n    console.log(this.props.movies);\r\n    return (\r\n      <div>\r\n        <h2>Buscador</h2>\r\n        <form className=\"form-container\" onSubmit={(e) => this.handleSubmit(e)}>\r\n          <div>\r\n            <label className=\"label\" htmlFor=\"title\">PelÃ­cula: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              autoComplete=\"off\"\r\n              value={title}\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">BUSCAR</button>\r\n        </form>\r\n        <div className= \"movieslist\">      \r\n         { this.props.movies?.map(movie=> \r\n            <div key={movie.imdbID} className=\"movie\" >\r\n                <Link to={`/movie-app/movie/${movie.imdbID}`}  >\r\n                <img src={movie.Poster} alt={movie.Title}></img>\r\n                </Link>\r\n                  <div className=\"det\">\r\n                    <h3>{movie.Title}</h3>\r\n                    <button onClick={() => this.props.addMovieFavorite({title: movie.Title, id: movie.imdbID, poster: movie.Poster})}>\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"icon icon-tabler icon-tabler-star\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#a905b6\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                              <path d=\"M12 17.75l-6.172 3.245l1.179 -6.873l-5 -4.867l6.9 -1l3.086 -6.253l3.086 6.253l6.9 1l-5 4.867l1.179 6.873z\" />\r\n                               </svg>\r\n                    </button>   \r\n                  </div>       \r\n              </div>\r\n            )      \r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) { //trae el estado de redux en forma de props\r\n  return {\r\n    movies: state.moviesLoaded,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) { //permite que el componente dispache acciones\r\n  return {\r\n    addMovieFavorite: movie => dispatch(addMovieFavorite(movie)),\r\n    getMovies: title => dispatch(getMovies(title)),\r\n    getMovieDetail: id => dispatch(getMovieDetail(id)),\r\n   removeMovieFavorite: id => dispatch(removeMovieFavorite(id))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Buscador);\r\n","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nimport './Navbar.css';\r\n\r\nexport default function NavBar() {\r\n    return (\r\n        <header className=\"navbar\">\r\n           \r\n               <Link exact to=\"/movie-app/\" className= \"title\">Movie App</Link>\r\n        \r\n            <nav>\r\n                <ul className=\"list\">\r\n                    <li className=\"list-item\">\r\n                        <NavLink exact to=\"/movie-app/\" >Home</NavLink>\r\n                        <NavLink to=\"/movie-app/favs\" >Favoritas</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getMovieDetail, clearMovieDetail } from '../../actions/index';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Movie.css';\r\n// usando destructuring\r\n//const { match: { params: { id }}} = this.props;\r\n// manera convencional\r\n//const movieId = this.props.match.params.id;\r\n\r\nclass Movie extends React.Component {\r\n\r\n    componentDidMount(){\r\n     this.props.clearMovieDetail();\r\n     const movieId = this.props.match.params.id;\r\n     this.props.getMovieDetail(movieId);\r\n    }\r\n\r\n    render() {\r\n         console.log(this.props.movieDetail);\r\n        return (\r\n            <div className=\"container row\">\r\n            <img src={this.props.movieDetail.Poster} alt={this.props.movieDetail.Title} className= \"column imgdetail\"></img>\r\n              <div className=\"movie-details column\">\r\n                  <h1>{this.props.movieDetail.Title}</h1>\r\n                  <h3>{this.props.movieDetail.Plot} </h3>\r\n                  <div className=\"minims\">\r\n                      <h3>Director: {this.props.movieDetail.Director} </h3>\r\n                      <h3>Writer: {this.props.movieDetail.Writer} </h3>\r\n                      <h3>Actors: {this.props.movieDetail.Actors} </h3>\r\n                      <h3>Year: {this.props.movieDetail.Year} </h3>\r\n                      <h3>Language: {this.props.movieDetail.Language} </h3>\r\n                      <h3>Genre: {this.props.movieDetail.Genre} </h3>\r\n                      <h3>Box office: {this.props.movieDetail.BoxOffice} </h3>\r\n                      <h3>Awards: {this.props.movieDetail.Awards} </h3>\r\n                      <h3>Released: {this.props.movieDetail.Released} </h3>\r\n                      <h3>Year: {this.props.movieDetail.Year} </h3>\r\n                      <h3>{this.props.movieDetail.Runtime} </h3>\r\n                      <h3>IMDB rating: {this.props.movieDetail.imdbRating} </h3>\r\n                  </div>\r\n                  <Link exact to=\"/movie-app\" className= \"title back\">Home</Link>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    movieDetail: state.movieDetail\r\n\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n      getMovieDetail: (id) => dispatch(getMovieDetail(id)),\r\n      clearMovieDetail: () => dispatch(clearMovieDetail())\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Movie);","import React from \"react\";\r\n\r\nimport Favorites from \"./components/Favorites/Favorites\";\r\nimport Buscador from \"./components/Buscador/Buscador\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Movie from \"./components/Movie/Movie\";\r\n\r\nfunction App() {\r\n  return (\r\n      <React.Fragment>\r\n          <NavBar />\r\n          <Route exact path=\"/movie-app/\" component={Buscador} />\r\n          <Route path=\"/movie-app/favs\" component={Favorites} />\r\n          <Route path=\"/movie-app/movie/:id\" component={Movie} />\r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {ADD_MOVIE_FAVORITE, GET_MOVIES, GET_MOVIE_DETAIL, REMOVE_MOVIE_FAVORITE, CLEAR_MOVIE_DETAIL} from \"../action-types\"\r\n\r\nconst initialState = {\r\n    moviesFavourites: [],\r\n    moviesLoaded: [],\r\n    movieDetail: {},\r\n    vacio: false\r\n  };\r\n\r\n\r\n  function rootReducer(state = initialState, action) {\r\n\r\n      switch (action.type){\r\n        case ADD_MOVIE_FAVORITE:\r\n            console.log (\"Me llego para agregar: \" + action.payload.id)\r\n            return {\r\n                ...state,\r\n                moviesFavourites: state.moviesFavourites.concat(action.payload)\r\n            }\r\n        case GET_MOVIES:\r\n            return {\r\n                ...state,\r\n                moviesLoaded: action.payload.Search\r\n            }\r\n        case GET_MOVIE_DETAIL:\r\n            console.log (\"Me llego el detalle: \" + action.payload.Title)\r\n            return {\r\n                ...state,\r\n                movieDetail: action.payload\r\n            }\r\n        case REMOVE_MOVIE_FAVORITE:\r\n            console.log (\"Me llego para borrar: \" + action.payload.id)\r\n            return {\r\n                ...state,\r\n                moviesFavourites: state.moviesFavourites.filter(m => m.id !== action.payload.id)\r\n            }\r\n        case CLEAR_MOVIE_DETAIL:\r\n            return {\r\n                ...state,\r\n                movieDetail: {}\r\n            }\r\n        \r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n      }\r\n  }\r\n\r\n  export default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose( applyMiddleware(thunk), \r\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (args) => args, )\r\n  );  \r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/index\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>,\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}